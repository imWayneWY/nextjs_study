{"version":3,"file":"static/webpack/static/development/pages/test/b.js.b38c6a10918057fef68e.hot-update.js","sources":["webpack:///./pages/test/b.js"],"sourcesContent":["import {useState, useEffect, useReducer} from 'react'\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1\n    case 'minus':\n      return state - 1\n    default:\n      return state\n  }\n}\n\nfunction MyCountFunc() {\n  // const [count, setCount] = useState(0)\n\n  const [count, dispatchCount] = useReducer(countReducer, 0)\n  const [name, setName] = useState('weiyan')\n\n  // useEffect(() => {\n  //   const interVal = setInterval(() => {\n  //     // setCount(c => c + 1)\n  //     dispatchCount({ type: 'minus'})\n  //   }, 1000)\n  //   return () => clearInterval(interVal)\n  // }, [])\n  // return <span>{count}</span>\n\n  useEffect(() => {\n    console.log('effect invoked')\n    return () => {\n      console.log('effect deteched')\n    };\n  }, [count])\n  return (\n    <div>\n      <input value={name} onChange = {(e) => setName(e.target.value)} />\n      <button onClick={() => dispatchCount({type: 'add'})}>{count}</button>\n    </div>\n  )\n}\n\nexport default MyCountFunc"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}