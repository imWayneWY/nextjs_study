{"version":3,"file":"static/webpack/static/development/pages/test/b.js.3d368136c931d573b3ed.hot-update.js","sources":["webpack:///./pages/test/b.js"],"sourcesContent":["import {useState, useEffect, useLayoutEffect, useReducer, useContext, useRef} from 'react'\nimport MyContext from '../../lib/my-context'\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1\n    case 'minus':\n      return state - 1\n    default:\n      return state\n  }\n}\n\nfunction MyCountFunc() {\n  // const [count, setCount] = useState(0)\n\n  const [count, dispatchCount] = useReducer(countReducer, 0)\n  const [name, setName] = useState('weiyan')\n\n  const context = useContext(MyContext)\n\n  const inputRef = useRef()\n\n  // useEffect(() => {\n  //   const interVal = setInterval(() => {\n  //     setCount(count + 1)\n  //     // dispatchCount({ type: 'minus'})\n  //   }, 1000)\n  //   return () => clearInterval(interVal)\n  // }, [count])\n  // return <span>{count}</span>\n  useLayoutEffect(() => {\n    console.log('layout effect invoked')\n    return () => {\n      console.log('layout effect deteched')\n    };\n  }, [count])\n\n  useEffect(() => {\n    // console.log('effect invoked')\n    console.log(inputRef)\n    return () => {\n      console.log('effect deteched')\n    };\n  }, [count])\n  return (\n    <div>\n      <input ref={inputRef} value={name} onChange = {(e) => setName(e.target.value)} />\n      <button onClick={() => dispatchCount({type: 'add'})}>{count}</button>\n      <p>{context}</p>\n    </div>\n  )\n}\n\nfunction Child({ onButtonClick, config }) {\n  console.log('child render')\n  return (\n    <button onClick={onButtonClick} style={{ color: config.color }}>\n      {config.text}\n    </button>\n  )\n}\n\nexport default MyCountFunc"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}