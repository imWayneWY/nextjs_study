{"version":3,"file":"static/webpack/static/development/pages/test/b.js.6ae4c3e75dc2951c248f.hot-update.js","sources":["webpack:///./pages/test/b.js"],"sourcesContent":["import {useState, useEffect, useLayoutEffect, useReducer, useContext, useRef, memo, useMemo, useCallback} from 'react'\nimport MyContext from '../../lib/my-context'\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1\n    case 'minus':\n      return state - 1\n    default:\n      return state\n  }\n}\n\nfunction MyCountFunc() {\n  // const [count, setCount] = useState(0)\n\n  const [count, dispatchCount] = useReducer(countReducer, 0)\n  const [name, setName] = useState('weiyan')\n  const config = useMemo(() => ({\n    text: `count is ${count}`,\n    color: count > 3? 'red':'blue',\n  }), [count])\n\n  // const handleButtonClick = useCallback(() => dispatchCount({type: 'add'}), [])\n  const handleButtonClick = useMemo(\n    () => () => dispatchCount({type: 'add'}),\n    [],\n  )\n  return (\n    <div>\n      <input value={name} onChange = {(e) => setName(e.target.value)} />\n      <Child\n        config={config}\n        onButtonClick={handleButtonClick}\n      />\n    </div>\n  )\n}\n\nconst Child = memo(function Child({ onButtonClick, config }) {\n  console.log('child render')\n  return (\n    <button onClick={onButtonClick} style={{ color: config.color }}>\n      {config.text}\n    </button>\n  )\n})\n\nexport default MyCountFunc"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;A","sourceRoot":""}