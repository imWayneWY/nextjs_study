{"version":3,"file":"static/webpack/static/development/pages/index.js.b3bc8d67e92d4e702802.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import axios from 'axios'\nimport { useEffect } from 'react'\nimport { Button, Icon, Tabs } from 'antd'\nimport getConfig from 'next/config'\nimport { connect } from 'react-redux'\nimport Repo from '../components/Repo'\nimport Router, { withRouter } from 'next/router'\n\nconst { publicRuntimeConfig } = getConfig()\n\n\n\nconst api = require('../lib/api')\n\nfunction Index ({ userRepos, userStaredRepos, user, router }) {\n  const tabKey = router.query.key || '1'\n\n  const handleTabChange = (activeKey) => {\n    Router.push(`/?key=${activeKey}`)\n  }\n  \n  if (!user || !user.id) {\n    return <div className=\"root\">\n      <p>You haven't login yet</p>\n      <Button type=\"primary\" href={publicRuntimeConfig.OAUTH_URL}>Login</Button>\n      <style jsx>{`\n        .root {\n          height: 400px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n      `}</style>\n    </div>\n  }\n  console.log(user)\n  return (\n    <div className=\"root\">\n      <div className=\"user-info\">\n        <img src={user.avatar_url} alt=\"user avatar\" className=\"avatar\" />\n        <span className=\"login\">{user.login}</span>\n        <span className=\"name\">{user.name}</span>\n        <span className=\"bio\">{user.bio}</span>\n        <p className=\"email\">\n          <Icon type=\"mail\" style={{ marginRight: 10 }}></Icon>\n          <a href={`mailto:${user.email}`}>{user.email}</a>\n        </p>\n      </div>\n      <div className=\"user-repos\">\n          <Tabs defaultActiveKey={tabKey} onChange={handleTabChange} animated={false}>\n            <Tabs.TabPane tab=\"Your Repos\" key=\"1\">\n              {userRepos.map(repo => <Repo repo={repo}/>)}\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Your Stared Repos\" key=\"2\">\n              {userStaredRepos.map(repo => <Repo repo={repo}/>)}\n            </Tabs.TabPane>\n          </Tabs>\n      </div>\n      <style jsx>{`\n        .root {\n          display: flex;\n          align-items: flex-start;\n          padding: 20px 0;\n        }\n        .user-info {\n          width: 200px;\n          margin-right: 40px;\n          flex-shrink: 0;\n          display: flex;\n          flex-direction: column;\n        }\n        .login {\n          font-weight: 800;\n          font-size: 20px;\n          margin-top: 20px;\n        }\n        .name {\n          font-size: 16px;\n          color: #777;\n        }\n        .bio {\n          margin-top: 20px;\n          color: #333;\n        }\n        .avatar {\n          width: 100%;\n          border-radius: 5px;\n        }\n        .user-rops {\n          flex-grow: 1\n        }\n      `}</style>\n    </div>\n  )\n}\nIndex.getInitialProps = async ({ctx, reduxStore}) => {\n  // const result =   await  axios.get('/github/search/repositories?q=react')\n  //     .then(resp => console.log(resp))\n\n  // ctx.req and ctx.res only works when it is run on server\n  const user = reduxStore.getState().user\n  if (!user || !user.id) {\n    return {\n    }\n  }\n  const userRepos = await api.request(\n    {\n      // url: '/search/repositories?q=react',\n      url: '/user/repos',\n    },\n    ctx.req,\n    ctx.res\n  )\n  const userStaredRepos = await api.request({\n    url: '/user/starred',\n  }, ctx.req, ctx.res)\n  return {\n    // data: result.data\n    userRepos: userRepos.data,\n    userStaredRepos: userStaredRepos.data,\n  }\n}\n\nexport default connect(\n  function mapState(state) {\n    return {\n      user: state.user\n    }\n  }\n)(withRouter(Index))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAaA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAyDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAYA;AACA;AAFA;AACA;AAZA;AAUA;AAVA;AAAA;AAmBA;AADA;AACA;AAnBA;AAkBA;AAlBA;AAsBA;AACA;AACA;AAHA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA2BA;AAEA;AACA;AADA;AAGA;;;;A","sourceRoot":""}