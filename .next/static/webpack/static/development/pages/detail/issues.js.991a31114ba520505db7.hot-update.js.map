{"version":3,"file":"static/webpack/static/development/pages/detail/issues.js.991a31114ba520505db7.hot-update.js","sources":["webpack:///./pages/detail/issues.js"],"sourcesContent":["import withRepoBasic from '../../components/with-repo-basic'\n\nimport api from '../../lib/api'\nimport { Avatar, Button, Select } from 'antd'\nimport { useState, useCallback } from 'react'\nimport dynamic from 'next/dynamic'\nimport { getLastUpdated } from '../../lib/util'\nimport SearchUser from './../../components/SearchUser'\n\nconst MDRenderer = dynamic(() => import('../../components/MarkdownRender'))\n\nfunction IssueDetail({issue}) {\n  return(\n    <div className=\"root\">\n      <MDRenderer content={issue.body}/>\n      <div className=\"actions\">\n        <Button href={issue.html_url} target=\"_blank\">Go to Discuss</Button>\n      </div>\n      <style jsx>{`\n        .root{\n          background: #fafafa;\n          padding: 20px;\n        }\n        .actions{\n          text-align: right;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nfunction IssueItem({issue}) {\n  const [showDetail, setShowDetail] = useState(false)\n  const toggleShowDetail = useCallback(() => {\n    setShowDetail(detail => !detail)  // escape from closure\n  },[])\n  return (\n    <div>\n      <div className=\"issue\">\n        <Button type=\"primary\" size=\"small\" style={{ position: 'absolute', right: 10, top: 10}}\n          onClick={toggleShowDetail}\n        >\n          {showDetail? 'HIDE' : 'SHOW'}\n        </Button>\n        <div className=\"avatar\">\n          <Avatar src={issue.user.avatar_url} shape=\"square\" size={50}/>\n        </div>\n        <div className=\"main-info\">\n          <h6>\n            <span>{issue.title}</span>\n          </h6>\n          <p className=\"sub-info\">\n            <span>Updated at {getLastUpdated(issue.updated_at)}</span>\n          </p>\n        </div>\n        <style jsx>{`\n          .issue {\n            display: flex;\n            position: relative;\n            padding: 10px;\n          }\n          .issue:hover {\n            background: #fafafa;\n          }\n          .issue + .issue {\n            border-top: 1px solid #eee;\n          }\n          ,main-info > h6 {\n            max-width: 600px;\n            font-size: 16px;\n            padding-right: 50px;\n          }\n          .avatar {\n            margin-right: 20px;\n          }\n          .sub-info {\n            margin-bottom: 0;\n          }\n          .sub-info > span + span {\n            display: inline-block;\n            magin-left: 20px;\n            font-size: 12px;\n          }\n        `}</style>\n      </div>\n      { showDetail? <IssueDetail issue={issue} /> : null }\n    </div>\n  )\n}\n\nconst Option = Select.Option\n\nfunction Issues ({ issues, labels }) {\n  const [creator, setCreator] = useState()\n  const [state, setState] = useState()\n\n  const handleCreatorChange = useCallback((value) => {\n    setCreator(value)\n  }, [])\n\n  const handleStateChange = useCallback((value) => {\n    setState(value)\n  }, [])\n  \n\n  return (\n    <div className=\"root\">\n      <div className=\"issues\">\n        <SearchUser onChange={handleCreatorChange} value={creator} />\n        <Select placeholder=\"status\"\n          onChange={handleStateChange}\n          value={state}\n          style={{ width: 200 }}\n        >\n          <Option value=\"all\">all</Option>\n          <Option value=\"open\">open</Option>\n          <Option value=\"closed\">closed</Option>\n        </Select>\n        {issues.map(issue => <IssueItem issue={issue} key={issue.id}/>)}\n      </div>\n      <style jsx>{`\n        .issues {\n          border: 1px solid #eee;\n          border-radius: 5px;\n          margin-bottom: 20px;\n          margin-top: 20px;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nIssues.getInitialProps = async ({ ctx }) => {\n  const { owner, name } = ctx.query\n  const issuesResp = await api.request({\n    url: `/repos/${owner}/${name}/issues`\n  }, ctx.req, ctx.res)\n\n  const labelsResp = await api.request({\n    url: `/repos/${owner}/${name}/labels`\n  }, ctx.req, ctx.res)\n\n  return {\n    issues: issuesResp.data,\n    labels: labelsResp.data\n  }\n} \n\nexport default withRepoBasic(Issues, 'issues')"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAgBA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAdA;AAAA;AA+CA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAwBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAHA;AAEA;AAFA;AAAA;AAOA;AADA;AACA;AAPA;AAMA;AANA;AAWA;AACA;AAFA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAeA;;;;A","sourceRoot":""}