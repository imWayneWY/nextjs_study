{"version":3,"file":"static/webpack/static/development/pages/_app.js.a60ce3d88ca73b7b5336.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from 'next/app'\nimport { Provider } from 'react-redux'\nimport Router from 'next/router'\nimport 'antd/dist/antd.css'\n\nimport Layout from '../components/Layout'\n\nimport testHoc from '../lib/withRedux'\nimport PageLoading from '../components/PageLoading'\nimport Link from 'next/link'\n\nclass MyApp extends App {\n  state = {\n    context: 'value',\n    loading: true,\n  }\n\n  startLoading = () => {\n    console.log('start loading')\n    this.setState({loading: true})\n  }\n\n  stopLoading = () => {\n    console.log('stop loading')\n    this.setState({loading: false})\n  }\n\n  componentDidMount() {\n    // Router.events.on('routeChangeStart', this.startLoading())\n    // Router.events.on('routeChangeComplete', this.stopLoading())\n    // Router.events.on('routeChangeError', this.stopLoading())\n  }\n\n  componentWillUnmount() {\n    // Router.events.off('routeChangeStart', this.startLoading())\n    // Router.events.off('routeChangeComplete', this.stopLoading())\n    // Router.events.off('routeChangeError', this.stopLoading())\n  }\n\n  static async getInitialProps(ctx) {\n    const { Component } = ctx\n    let pageProps\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n    return {\n      pageProps\n    }\n  }\n\n  render() {\n    const { Component, pageProps, reduxStore } = this.props\n\n    return (\n      <Container>\n        <Provider store={reduxStore}>\n        { this.state.loading ? <PageLoading /> : null }\n        <Layout>\n          <Link href=\"/\">\n            <a>Index</a>\n          </Link>\n          <Link href=\"/detail\">\n            <a>Detail</a>\n          </Link>\n          <Component {...pageProps}/>\n        </Layout>\n        </Provider>\n        {/* <Component {...pageProps}/> */}\n      </Container>\n    )\n  }\n}\n\nexport default testHoc(MyApp)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAEA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;;;AAaA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAGA;AAAA;AAGA;AAAA;AASA;;;;;;AA/BA;;;;;;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;AAnCA;AACA;AA6DA;;;;A","sourceRoot":""}