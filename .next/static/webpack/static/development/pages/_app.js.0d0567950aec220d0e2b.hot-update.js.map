{"version":3,"file":"static/webpack/static/development/pages/_app.js.0d0567950aec220d0e2b.hot-update.js","sources":["webpack:///./store/store.js"],"sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport axios from 'axios'\n// const initialState = {\n//   count: 0\n// }\nconst userInitialState = {\n  // username: 'weiyan'\n}\n// const ADD = 'ADD'\n\nconst LOGOUT = 'LOGOUT'\n\n// function counterReducer(state = initialState, action) {\n//   console.log(state, action)\n//   switch (action.type) {\n//     case ADD:\n//       return {count: state.count + (action.num || 1)}\n//     default:\n//       return state\n//   }\n// }\n\n// const UPDATE_USERNAME = 'UPDATE_USERNAME'\n// function userReducer(state = userInitialState, action) {\n//   switch (action.type) {\n//     case UPDATE_USERNAME:\n//       return {\n//         ...state,\n//         username: action.name,\n//       }\n//     default:\n//       return state\n//   }\n// }\n\nfunction userReducer(state = userInitialState, action) {\n  switch (action.type) {\n    case LOGOUT: {\n      return {\n        ...state,\n        user: {},\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst allReducers = combineReducers({\n  // counter: counterReducer,\n  user: userReducer,\n})\n\n\n// action creators\n\nexport function logout() {\n  return dispatch => {\n    axios.post('/logout')\n      .then(resp=>{\n        if (resp.status === 200) {\n          dispatch({\n            type: LOGOUT\n          })\n        } else {\n          console.log('logout failed', resp)\n        }\n      }).catch(err => {\n        console.log('logout failed', err)\n      })\n  }\n}\n\n// export function add(num) {\n//   return {\n//     type: ADD,\n//     num,\n//   }\n// }\n\n// export function addAsync(num) {\n//   return dispatch => {\n//     setTimeout(() => {\n//       dispatch(add(num), 1000)\n//     })\n//   }\n// }\n\nexport default function initializeStore(state){\n  const store = createStore(\n    allReducers,\n    // {\n    //   counter: initialState,\n    //   user: userInitialState,\n    // },\n    Object.assign({}, {\n      // counter: initialState,\n      user: userInitialState,\n    }, state),\n    composeWithDevTools(applyMiddleware(ReduxThunk)),\n  )\n  return store\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAHA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAFA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAMA;AACA;;;;A","sourceRoot":""}